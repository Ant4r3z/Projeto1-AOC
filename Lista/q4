.data
str1: .asciiz "Ronatdo"
str2: .asciiz "Ronaldo"
buff: .space 10

.text
main:
    la $a0, str2
    la $a1, str1
    li $a3, 5
    jal strncmp
    add $v1, $v0, $zero
    la $a0, buff
    li $v0, 1
    add $a0, $zero, $v1
    syscall
    #jal print_string
    j end



strcpy:
    add $t0, $a1, $zero
    add $t1, $a0, $zero
    
    strcpy_loop:
        lb $t2, 0($t0)
        beqz $t2, end_strcpy
        sb $t2, 0($t1)
        addi $t0, $t0, 1
        addi $t1, $t1, 1
        j strcpy_loop
        
    end_strcpy:
        jr $ra
        

memcpy:
    add $t0, $zero, $a0
    add $t1, $zero, $a1
    add $t2, $zero, $zero
    
    memcpy_loop:
        bge $t2, $a2, end_memcpy
        lb $t3, 0($t1)
        sb $t3, 0($t0)
        addi $t0, $t0, 1
        addi $t1, $t1, 1
        addi $t2, $t2, 1
        j memcpy_loop
        
    end_memcpy:
        jr $ra
        

strcmp:
    add $t0, $zero, $a0
    add $t1, $zero, $a1
    
    strcmp_loop:
        lb $t2, 0($t0)
        lb $t3, 0($t1)
        addi $v0, $zero, 1
        bgt $t2, $t3, end_strcmp
        addi $v0, $zero, -1
	blt $t2, $t3, end_strcmp
	add $v0, $zero, $zero
	beqz $t2, end_strcmp
	addi $t0, $t0, 1
	addi $t1, $t1, 1
	j strcmp_loop
	
    end_strcmp:
        jr $ra


print_string:
    # set up system call for printing string
    li  $v0, 4 # set system call number to print string
    syscall # call operating system to print string

    # return
    jr  $ra # return


strncmp:
    add $t0, $zero, $a0
    add $t1, $zero, $a1
    add $t4, $zero, $zero
    
    strncmp_loop:
        lb $t2, 0($t0)
        lb $t3, 0($t1)
        addi $v0, $zero, 1
        bgt $t2, $t3, end_strncmp
        addi $v0, $zero, -1
	blt $t2, $t3, end_strncmp
	add $v0, $zero, $zero
	beqz $t2, end_strncmp
	addi $t4, $t4, 1
	bge $t4, $a3, end_strncmp
	addi $t0, $t0, 1
	addi $t1, $t1, 1
	j strncmp_loop
	
    end_strncmp:
        jr $ra


strcat:


end:
    li $v0, 10
    syscall


